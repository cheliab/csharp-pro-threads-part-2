
namespace N_007_SemaphoreSlim;

/// <summary>
/// SemaphoreSlim - облегченная версия
///
/// Данная версия семафора не использует ядро ОС
/// За счет этого он работает быстрей
/// </summary>
internal static class Program
{
    private static SemaphoreSlim _pool;

    private static void Function(object number)
    {
        _pool.Wait();
        
        Console.WriteLine("Поток {0} занял слот семафора.", number);
        Thread.Sleep(2000);
        Console.WriteLine("Поток {0} -----> освободил слот.", number);

        _pool.Release();
    }
    
    public static void Main()
    {
        /*
         * Аргументы:
         * 1. initialCount - количество слотов доступных на старте
         * 2. maxCount - максимально количество доспутных слотов
         *
         * Нет возможности указать название,
         * так как он не может быть использован для межпроцессной синхронизации
         */
        _pool = new SemaphoreSlim(2, 4);

        for (int i = 1; i <= 8; i++)
        {
            new Thread(Function).Start(i);
        }
        
        Console.ReadKey();
    }
}

// Результат:
//
// Поток 1 занял слот семафора.
// Поток 4 занял слот семафора.
// Поток 4 -----> освободил слот.
// Поток 1 -----> освободил слот.
// Поток 2 занял слот семафора.
// Поток 3 занял слот семафора.
// Поток 2 -----> освободил слот.
// Поток 3 -----> освободил слот.
// Поток 6 занял слот семафора.
// Поток 5 занял слот семафора.
// Поток 5 -----> освободил слот.
// Поток 7 занял слот семафора.
// Поток 6 -----> освободил слот.
// Поток 8 занял слот семафора.
// Поток 8 -----> освободил слот.
// Поток 7 -----> освободил слот.